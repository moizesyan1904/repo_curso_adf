{
	"name": "df_trasnformavenda",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vendas_semcliente",
						"type": "DatasetReference"
					},
					"name": "vendassemcliente"
				},
				{
					"dataset": {
						"referenceName": "vendas_cliente",
						"type": "DatasetReference"
					},
					"name": "vendascliente"
				},
				{
					"dataset": {
						"referenceName": "dir_blob",
						"type": "DatasetReference"
					},
					"name": "cidade"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dir_blob",
						"type": "DatasetReference"
					},
					"name": "FileVendasDestino"
				}
			],
			"transformations": [
				{
					"name": "EscolherColunas"
				},
				{
					"name": "InnerJoin"
				},
				{
					"name": "InnerJoinCid"
				},
				{
					"name": "EscolherColunas2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id_venda as string,",
				"          cod_vendedor as string,",
				"          nom_vendedor as string,",
				"          cod_produto as string,",
				"          Nom_produto as string,",
				"          cod_marca as string,",
				"          Nom_marca as string,",
				"          cod_departamento as string,",
				"          nom_departamento as string,",
				"          cod_gerencia as string,",
				"          nom_gerencia as string,",
				"          Ano_venda as string,",
				"          {Mï¿½s_venda} as string,",
				"          Dia_venda as string,",
				"          dtc_venda as string,",
				"          qtd_venda as string,",
				"          val_venda as string,",
				"          num_nota as string,",
				"          Latitude as string,",
				"          Longitude as string,",
				"          nom_cidade as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> vendassemcliente",
				"source(output(",
				"          id_venda as string,",
				"          cod_cliente as string,",
				"          cod_cidade as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> vendascliente",
				"source(output(",
				"          idcidade as short,",
				"          nomecidade as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:['/saidacargacidade.csv']) ~> cidade",
				"vendassemcliente select(mapColumn(",
				"          id_venda,",
				"          cod_produto,",
				"          qtd_venda,",
				"          val_venda,",
				"          nom_cidade",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> EscolherColunas",
				"EscolherColunas, vendascliente join(EscolherColunas@id_venda == vendascliente@id_venda,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoin",
				"InnerJoin, cidade join(nom_cidade == nomecidade,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoinCid",
				"InnerJoinCid select(mapColumn(",
				"          idvenda = EscolherColunas@id_venda,",
				"          idproduto = cod_produto,",
				"          quantidade = qtd_venda,",
				"          valor_total = val_venda,",
				"          idcliente = cod_cliente,",
				"          idcidade",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> EscolherColunas2",
				"EscolherColunas2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['saidacargavenda.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FileVendasDestino"
			]
		}
	}
}