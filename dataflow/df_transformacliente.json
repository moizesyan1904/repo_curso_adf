{
	"name": "df_transformacliente",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "file_vendas",
						"type": "DatasetReference"
					},
					"name": "filevendas"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dir_blob",
						"type": "DatasetReference"
					},
					"name": "saidacargacliente"
				}
			],
			"transformations": [
				{
					"name": "EscolherColunas"
				},
				{
					"name": "LetraMaiuscula"
				},
				{
					"name": "RemoverDuplicatas"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id_venda as string,",
				"          cod_cliente as string,",
				"          nom_cliente as string,",
				"          cod_vendedor as string,",
				"          nom_vendedor as string,",
				"          cod_cidade as string,",
				"          nom_cidade as string,",
				"          cod_produto as string,",
				"          Nom_produto as string,",
				"          cod_marca as string,",
				"          Nom_marca as string,",
				"          cod_departamento as string,",
				"          nom_departamento as string,",
				"          cod_gerencia as string,",
				"          nom_gerencia as string,",
				"          Ano_venda as string,",
				"          {MÃªs_venda} as string,",
				"          Dia_venda as string,",
				"          dtc_venda as string,",
				"          qtd_venda as string,",
				"          val_venda as string,",
				"          num_nota as string,",
				"          Latitude as string,",
				"          Longitude as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> filevendas",
				"filevendas select(mapColumn(",
				"          idcliente = cod_cliente,",
				"          nomecliente = nom_cliente",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> EscolherColunas",
				"EscolherColunas derive(nomecliente = upper(nomecliente)) ~> LetraMaiuscula",
				"LetraMaiuscula aggregate(groupBy(idcliente,",
				"          nomecliente),",
				"     idclienteagg = first(idcliente)) ~> RemoverDuplicatas",
				"RemoverDuplicatas sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['saidacargacliente.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          idcliente,",
				"          nomecliente",
				"     ),",
				"     partitionBy('hash', 1)) ~> saidacargacliente"
			]
		}
	}
}